{"version":3,"file":"static/js/273.37911a31.chunk.js","mappings":"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","sources":["pages/Order.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getOrderById, updateOrderToDelivered } from \"../slices/orderSlice\";\r\nimport Loader from \"../components/Loader\";\r\nimport { ImSpinner2 } from \"react-icons/im\";\r\nimport Skeleton from \"../components/Skeleton\";\r\n\r\nconst OrderItem = (props) => {\r\n  const { _id, name, brand, image, quantity, price } = props;\r\n\r\n  return (\r\n    <div className=\"checkout-cart-item\">\r\n      <div className=\"checkout-item-image\">\r\n        <img src={image} alt={name} />\r\n      </div>\r\n      <div className=\"checkout-item-info\">\r\n        <h4 className=\"ellipses-2\">{name}</h4>\r\n        <h6>Brand: {brand}</h6>\r\n      </div>\r\n\r\n      <p>${price}</p>\r\n      <div className=\"checkout-item-quantity\">{quantity}</div>\r\n      <p>${price * quantity}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Order = () => {\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n  const {\r\n    loading: orderLoading,\r\n    data: {\r\n      orderDetails: {\r\n        shippingAddress,\r\n        isDelivered,\r\n        orderItems,\r\n        itemsPrice,\r\n        shippingPrice,\r\n        taxPrice,\r\n        totalPrice,\r\n        paymentMethod,\r\n        isPaid,\r\n        paidAt,\r\n        deliveredAt,\r\n      },\r\n    },\r\n  } = useSelector((state) => state.orders);\r\n\r\n  const {\r\n    loading: userLoading,\r\n    data: {\r\n      user: { isAdmin },\r\n    },\r\n  } = useSelector((state) => state.user);\r\n\r\n  const deliverOrder = () => {\r\n    dispatch(updateOrderToDelivered(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrderById(id));\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Order Details\";\r\n  }, []);\r\n\r\n  return (\r\n    <section id=\"order\">\r\n      <div className=\"container\">\r\n        <div className=\"order-container\">\r\n          <div className=\"shipping-address\">\r\n            <h1 className=\"heading-3\">Shipping Address</h1>\r\n            {!orderLoading ? (\r\n              <>\r\n                <p className=\"body-text-1\">\r\n                  {shippingAddress?.address}, {shippingAddress?.postalCode},\r\n                  <br />\r\n                  {shippingAddress?.city}, {shippingAddress?.country}\r\n                </p>\r\n                <p className={`status ${isDelivered ? \"true\" : false}`}>\r\n                  {isDelivered\r\n                    ? `Delivered on ${deliveredAt}`\r\n                    : \"Not Delivered\"}\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <Skeleton cls=\"address-skeleton\" />\r\n            )}\r\n          </div>\r\n          <div className=\"order-payment\">\r\n            <h1 className=\"heading-3\">Payment Method</h1>\r\n            {!orderLoading ? (\r\n              <>\r\n                <h4>Method: {paymentMethod}</h4>\r\n                <p className={`status ${isPaid ? \"true\" : false}`}>\r\n                  {isPaid ? `Paid on ${paidAt}` : \"Not Paid\"}\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <Skeleton cls=\"address-skeleton\" />\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"order-items-container\">\r\n            <h1 className=\"heading-3\">Order Items</h1>\r\n            <div className=\"checkout-cart-head\">\r\n              <span>Product</span>\r\n              <span>price</span>\r\n              <span>Quantity</span>\r\n              <span>total</span>\r\n            </div>\r\n            {!orderLoading\r\n              ? orderItems?.map((item) => {\r\n                  return <OrderItem key={item._id} {...item} />;\r\n                })\r\n              : new Array(3).fill(0).map((_, i) => {\r\n                  return <Skeleton cls=\"list-item-skeleton\" />;\r\n                })}\r\n          </div>\r\n        </div>\r\n        <div className=\"order-summary\">\r\n          <h1 className=\"heading-3\">Order summary</h1>\r\n          <div>\r\n            <h4>Items</h4>\r\n            {!orderLoading? <p>${itemsPrice}</p>:<Skeleton cls=\"price-skeleton\"/>}\r\n          </div>\r\n          <div>\r\n            <h4>shipping</h4>\r\n            {!orderLoading? <p>${shippingPrice}</p>:<Skeleton cls=\"price-skeleton\"/>}\r\n          </div>\r\n          <div>\r\n            <h4>tax</h4>\r\n            {!orderLoading? <p>${taxPrice}</p>:<Skeleton cls=\"price-skeleton\"/>}\r\n          </div>\r\n          <div>\r\n            <h4>total</h4>\r\n            {!orderLoading ? <p>${totalPrice}</p>:<Skeleton cls=\"price-skeleton\"/>}\r\n          </div>\r\n          {isAdmin && !isDelivered && (\r\n            <button\r\n              className=\"button-1\"\r\n              onClick={deliverOrder}\r\n              disabled={orderLoading}\r\n            >\r\n              {orderLoading ? (\r\n                <ImSpinner2 className=\"fa-spin\" />\r\n              ) : (\r\n                \"mark as delivered\"\r\n              )}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n"],"names":["OrderItem","props","_id","name","brand","image","quantity","price","_jsxs","className","children","_jsx","src","alt","Order","dispatch","useDispatch","id","useParams","loading","orderLoading","data","orderDetails","shippingAddress","isDelivered","orderItems","itemsPrice","shippingPrice","taxPrice","totalPrice","paymentMethod","isPaid","paidAt","deliveredAt","useSelector","state","orders","userLoading","user","isAdmin","useEffect","getOrderById","document","title","Skeleton","cls","_Fragment","address","postalCode","city","country","concat","Array","fill","map","_","i","item","_objectSpread","onClick","deliverOrder","updateOrderToDelivered","disabled","ImSpinner2"],"sourceRoot":""}