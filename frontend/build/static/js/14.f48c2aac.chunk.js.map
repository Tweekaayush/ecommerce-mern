{"version":3,"file":"static/js/14.f48c2aac.chunk.js","mappings":"2NAQA,MAkHA,EAlHcA,KACZ,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,MACZC,GAAWC,EAAAA,EAAAA,OACX,QACJC,EACAC,MACEC,MAAM,IAAEC,IACT,MACDC,IACEC,EAAAA,EAAAA,KAAaT,GAAUA,EAAMM,QAC1BI,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,MAAO,GACPC,SAAU,MAELC,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,CAC3CC,MAAO,GACPC,SAAU,KAENG,GAAWC,EAAAA,EAAAA,MAmCXC,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BZ,GAAWa,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAId,GAAQ,IAAE,CAACW,GAAOC,IAAQ,EAS7C,OANAG,EAAAA,EAAAA,YAAU,KACJlB,GACMU,EAARjB,EAAiBA,EAAM0B,YAAwB,WACjD,GACC,CAACnB,KAGFoB,EAAAA,EAAAA,KAAA,WAASC,GAAG,iBAAgBC,UAC1BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACxBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,iBAAgBD,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,YAAWD,SAAC,WAC1BF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,cAAaD,SAAC,mCAC3BE,EAAAA,EAAAA,MAAA,QAAMC,SA9BQZ,IACpBA,EAAEa,iBArBaC,MACf,MAAMC,EAAM,CACVrB,SAAU,GACVD,MAAO,IAcT,OATKH,EAASI,SAASsB,SACrBD,EAAIrB,SAAW,+BAHD,mDAKHuB,KAAK3B,EAASG,SACzBsB,EAAItB,MAAQ,kCAGdG,GAAaQ,EAAAA,EAAAA,GAAC,CAAC,EAAIW,KAEXA,EAAIrB,WAAaqB,EAAItB,KAAK,EAMxBqB,KAERhC,GAASoC,EAAAA,EAAAA,KAAKd,EAAAA,EAAAA,GAAC,CAAC,EAAId,KACpBC,EAAY,CACVE,MAAO,GACPC,SAAU,KAEd,EAoBmCe,SAAA,EAC3BE,EAAAA,EAAAA,MAAA,SAAOQ,QAAQ,QAAQT,UAAU,aAAYD,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,SACEa,KAAK,QACLnB,KAAK,QACLO,GAAG,QACHN,MAAOZ,EAASG,MAChB4B,SAAUtB,KAEZQ,EAAAA,EAAAA,KAAA,QAAAE,SAAM,UACLd,EAAWF,QACVc,EAAAA,EAAAA,KAAA,KAAGG,UAAU,iBAAgBD,SAAEd,EAAWF,YAG9CkB,EAAAA,EAAAA,MAAA,SAAOQ,QAAQ,WAAWT,UAAU,aAAYD,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,SACEa,KAAK,WACLnB,KAAK,WACLO,GAAG,WACHN,MAAOZ,EAASI,SAChB2B,SAAUtB,KAEZQ,EAAAA,EAAAA,KAAA,QAAAE,SAAM,aACLd,EAAWD,WACVa,EAAAA,EAAAA,KAAA,KAAGG,UAAU,iBAAgBD,SAAEd,EAAWD,eAG9Ca,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,GAAG,mBAAmBb,UAAU,YAAWD,SAAC,sBAGlDF,EAAAA,EAAAA,KAAA,UAAQa,KAAK,SAASI,SAAUxC,EAAS0B,UAAU,WAAUD,SAAEzB,GAAUuB,EAAAA,EAAAA,KAACkB,EAAAA,IAAU,CAACf,UAAU,YAAc,WAC7GC,EAAAA,EAAAA,MAAA,KAAAF,SAAA,CAAG,yBACsB,KACvBF,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,GAAG,UAAUb,UAAU,YAAWD,SAAC,wBAOzC,C","sources":["pages/Login.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearUsersErrors, login } from \"../slices/userSlice\";\r\nimport { toast, Bounce } from \"react-toastify\";\r\nimport Loader from \"../components/Loader\";\r\nimport { ImSpinner2 } from \"react-icons/im\";\r\n\r\nconst Login = () => {\r\n  const { state } = useLocation();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    loading,\r\n    data: {\r\n      user: { _id },\r\n    },\r\n    error,\r\n  } = useSelector((state) => state.user);\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [formErrors, setFormErrors] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  const validate = () => {\r\n    const err = {\r\n      password: \"\",\r\n      email: \"\",\r\n    };\r\n\r\n    const pattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n\r\n    if (!formData.password.length) {\r\n      err.password = \"Please enter your password!\";\r\n    }\r\n    if (!pattern.test(formData.email)) {\r\n      err.email = \"Please enter a valid Email ID!\";\r\n    }\r\n\r\n    setFormErrors({ ...err });\r\n\r\n    return !err.password && !err.email;\r\n  };\r\n\r\n  const handleSumbit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const v = validate();\r\n    if (v) {\r\n      dispatch(login({ ...formData }));\r\n      setFormData({\r\n        email: \"\",\r\n        password: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (_id) {\r\n      state ? navigate(state.previousURL) : navigate(\"/profile\");\r\n    }\r\n  }, [_id]);\r\n\r\n  return (\r\n    <section id=\"auth-container\">\r\n      <div className=\"container\">\r\n        <div className=\"form-container\">\r\n          <h1 className=\"heading-2\">Login</h1>\r\n          <p className=\"body-text-1\">We are so excited to see you!</p>\r\n          <form onSubmit={handleSumbit}>\r\n            <label htmlFor=\"email\" className=\"form-label\">\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n              />\r\n              <span>Email</span>\r\n              {formErrors.email && (\r\n                <p className=\"form-error-msg\">{formErrors.email}</p>\r\n              )}\r\n            </label>\r\n            <label htmlFor=\"password\" className=\"form-label\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n              />\r\n              <span>Password</span>\r\n              {formErrors.password && (\r\n                <p className=\"form-error-msg\">{formErrors.password}</p>\r\n              )}\r\n            </label>\r\n            <Link to=\"/password/forget\" className=\"form-link\">\r\n              Forget password?\r\n            </Link>\r\n            <button type=\"submit\" disabled={loading} className=\"button-2\">{loading ? <ImSpinner2 className=\"fa-spin\"/> : \"Login\"}</button>\r\n            <p>\r\n              Don't have an account?{\" \"}\r\n              <Link to=\"/signup\" className=\"form-link\">\r\n                Sign Up\r\n              </Link>\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["Login","state","useLocation","dispatch","useDispatch","loading","data","user","_id","error","useSelector","formData","setFormData","useState","email","password","formErrors","setFormErrors","navigate","useNavigate","handleChange","e","name","value","target","_objectSpread","useEffect","previousURL","_jsx","id","children","className","_jsxs","onSubmit","preventDefault","validate","err","length","test","login","htmlFor","type","onChange","Link","to","disabled","ImSpinner2"],"sourceRoot":""}