{"version":3,"file":"static/js/779.895fe989.chunk.js","mappings":"gMAMA,MAoEA,EApEuBA,KACrB,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,OACXC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,IACvCG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,QACJC,EACAC,MACEC,MAAM,IAAEC,IACT,MACDC,IACEC,EAAAA,EAAAA,KAAahB,GAAUA,EAAMa,OA4BjC,OAVAI,EAAAA,EAAAA,YAAU,KACJH,GACML,EAART,EAAiBA,EAAMkB,YAAwB,WACjD,GACC,CAACJ,KAEJG,EAAAA,EAAAA,YAAU,KACRE,SAASC,MAAQ,iBAAiB,GACjC,KAGDC,EAAAA,EAAAA,KAAA,WAASC,GAAG,iBAAgBC,UAC1BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACxBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,iBAAgBD,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,YAAWD,SAAC,qBAC1BF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,cAAaD,SAAC,2CAC3BE,EAAAA,EAAAA,MAAA,QAAMC,SArBQC,IACpBA,EAAEC,iBAZaC,MACf,IAAId,EAAQ,GAOZ,MANgB,mDACHe,KAAK5B,KAChBa,EAAQ,uBAGVT,EAAcS,GACG,KAAVA,CAAY,EAKfc,IAAYtB,GAASwB,EAAAA,EAAAA,IAAe,CAAE7B,UAAS,EAmBhBqB,SAAA,EAC3BE,EAAAA,EAAAA,MAAA,SAAOO,QAAQ,QAAQR,UAAU,aAAYD,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,SACEY,KAAK,QACLC,KAAK,QACLZ,GAAG,QACHa,MAAOjC,EACPkC,SAAWT,GAAMxB,EAASwB,EAAEU,OAAOF,UAErCd,EAAAA,EAAAA,KAAA,QAAAE,SAAM,UACLlB,IAAcgB,EAAAA,EAAAA,KAAA,KAAGG,UAAU,iBAAgBD,SAAElB,QAEhDgB,EAAAA,EAAAA,KAAA,UAAQY,KAAK,SAASK,SAAU3B,EAASa,UAAU,WAAUD,SAC1DZ,GAAUU,EAAAA,EAAAA,KAACkB,EAAAA,IAAU,CAACf,UAAU,YAAe,kBAKhD,C","sources":["pages/ForgotPassword.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { forgetPassword } from \"../slices/userSlice\";\r\nimport { ImSpinner2 } from \"react-icons/im\";\r\n\r\nconst ForgotPassword = () => {\r\n  const { state } = useLocation();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const {\r\n    loading,\r\n    data: {\r\n      user: { _id },\r\n    },\r\n    error,\r\n  } = useSelector((state) => state.user);\r\n\r\n  const validate = () => {\r\n    let error = \"\";\r\n    const pattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!pattern.test(email)) {\r\n      error = \"enter a valid email\";\r\n    }\r\n\r\n    setEmailError(error);\r\n    return error === \"\";\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validate()) dispatch(forgetPassword({ email }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (_id) {\r\n      state ? navigate(state.previousURL) : navigate(\"/profile\");\r\n    }\r\n  }, [_id]);\r\n\r\n  useEffect(() => {\r\n    document.title = \"Forget Password\";\r\n  }, []);\r\n\r\n  return (\r\n    <section id=\"auth-container\">\r\n      <div className=\"container\">\r\n        <div className=\"form-container\">\r\n          <h1 className=\"heading-2\">Forget Password</h1>\r\n          <p className=\"body-text-1\">We'll send you a password reset link.</p>\r\n          <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"email\" className=\"form-label\">\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              <span>email</span>\r\n              {emailError && <p className=\"form-error-msg\">{emailError}</p>}\r\n            </label>\r\n            <button type=\"submit\" disabled={loading} className=\"button-1\">\r\n              {loading ? <ImSpinner2 className=\"fa-spin\" /> : \"Send\"}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"names":["ForgotPassword","state","useLocation","email","setEmail","useState","emailError","setEmailError","dispatch","useDispatch","navigate","useNavigate","loading","data","user","_id","error","useSelector","useEffect","previousURL","document","title","_jsx","id","children","className","_jsxs","onSubmit","e","preventDefault","validate","test","forgetPassword","htmlFor","type","name","value","onChange","target","disabled","ImSpinner2"],"sourceRoot":""}